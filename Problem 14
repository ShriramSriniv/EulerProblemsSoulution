def collatz_length(n, memo):
    if n in memo:
        return memo[n]
    if n == 1:
        memo[n] = 1
        return 1
    length = 1 + collatz_length(n // 2, memo) if n % 2 == 0 else 1 + collatz_length(3 * n + 1, memo)
    memo[n] = length
    return length

def find_longest_collatz_chain(limit):
    memo, max_length, number_with_max_length = {}, 0, 0
    for i in range(1, limit):
        length = collatz_length(i, memo)
        if length > max_length:
            max_length, number_with_max_length = length, i
    return number_with_max_length, max_length

limit = 1000000
result_number, result_length = find_longest_collatz_chain(limit)
print(f"The starting number under {limit} that produces the longest chain is {result_number} with a chain length of {result_length}.")
