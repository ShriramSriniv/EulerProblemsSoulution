import math

def count_divisors(n):
    count = 0
    sqrt_n = int(math.sqrt(n))
    for i in range(1, sqrt_n + 1):
        if n % i == 0:
            if i * i == n:
                count += 1  # Perfect square case
            else:
                count += 2  # i and n//i are distinct divisors
    return count

def find_triangle_number_with_divisors(divisor_threshold):
    n = 1
    triangle_number = 0
    while True:
        triangle_number += n
        num_divisors = count_divisors(triangle_number)
        if num_divisors > divisor_threshold:
            return triangle_number
        n += 1

# Find and print the first triangle number with over 500 divisors
print(find_triangle_number_with_divisors(500))
